name: myapp pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.set-version.outputs.VERSION }} 
    steps:
    
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Increase the Patch part of the jar version
    - name: Increment patch version
      working-directory: ./myapp
      id: set-version
      run: |
        mvn build-helper:parse-version versions:set -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.nextIncrementalVersion}'
        echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

    # Update changes in master branch
    - name: Commit and push changes
      working-directory: ./myapp
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

        # Check if pom.xml is changed
        git diff --exit-code ./pom.xml
        if [ $? -ne 0 ]; then
          git add ./pom.xml
          git commit -m "chore: bump version to $VERSION"
          git push origin master
        else
          echo "No changes detected, skipping commit."
        fi
    
  deploy:
    needs: build
    runs-on: ubuntu-latest
    env: 
      VERSION: ${{ needs.build.outputs.VERSION }}
    steps:
    
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3
    
    # Build maven app image using Dockerfile
    - name: Build Docker image
      run: | 
        IMAGE_NAME="maven-hello-world"
        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
        docker build -t $IMAGE_NAME .  
        docker tag $IMAGE_NAME ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$VERSION

    # Login to Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Push Docker image to Docker Hub
    - name: Push to Docker Hub repository
      run: |
        echo "Pushing image: $IMAGE_NAME:$VERSION"
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$VERSION 

    # Download and run the docker image
    - name: Run Docker image
      run: |
        docker run --name myapp ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$VERSION
    
    # Logout from Docker Hub
    - name: Logout from Docker Hub
      run: |
        docker logout
